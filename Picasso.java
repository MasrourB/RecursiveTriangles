import processing.core.PApplet;

/**
 * Picasso.java
 * A demonstration of graphics generated by recursion. In this case it is a series of triangles on top of another that follow the mouse 
 * The triangles also increase and decrease in size depending on the cursor position, which creates a sort of "folding" effect.
 * 
 * @author Masrour Basith, mb5039@nyu.edu
 *
 */
@SuppressWarnings("serial")
public class Picasso extends PApplet{
	
	//Initialize our variables
	int xPos;
	int yPos;
	int WIDTH=800;
	int HEIGHT=600;
	int z = 400;
	int size = 500;
	public void setup(){
		//Generates a screen with dimensions 800x600
		size(WIDTH,HEIGHT);
		
	}
	public void draw(){
		//Makes a black background
		background(0,0,0);
		//Our xPos and yPos changes with the location of the mouse, so our triangles follow the mouse.
		xPos = mouseX;
		yPos = mouseY;
		//Calls the recursiveTriangles function and generates our triangles
		recursiveTriangles(xPos,yPos,z,size);
		//Colors our triangles
		fill(0,140,255);
		
	}
	
	/**
	 * A recursive function that creates a series of triangles on top of one another
	 * @param x Coordinates of the first point on the triangles
	 * @param y Coordinates of the second point on the triangles
	 * @param z Coordinates of the third point on the triangles
	 * @param size The size of our triangles
	 */
	private void recursiveTriangles(int x, int y,int z, int size){
		//Base Case. If the size is less than or equal to 5 we stop.
		if(size <=5){
			//this.triangle(x,y,z,x,y,z);
			return;
		}
		else{//Creates a triangle with the coordinates (x,x),(y,y),(z,z)
		this.triangle(x,y,z,x,y,z);
		//Decreases the size by 25
		size = size-25;
		//Decreases the x coordinate by 20 and the y by 5. The z coordinate however, increases by 5.
		//This change in the z coordinate gives a sort of "bird's eye view" of the triangles stacked onto each other
		////This gives off a sort of illusion of a 3D program using only 2D processing.
		x=x-20;
		y=y-5;
		z=z+5;
		//Recursive Call
		recursiveTriangles(x,y,z,size);
	}}
		
}
